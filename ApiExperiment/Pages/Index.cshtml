@page
@model IndexModel
@{
    ViewData["Title"] = "Home";
}

<div class="container mt-4">
    <h1>User &amp; Service Data API Application</h1>
    <p>An ASP.NET Core web application providing APIs for managing user data, service data, and field access settings with hierarchical access control. This project demonstrates secure data handling, a frontend interface, and downloadable PowerShell scripts for data management.</p>

    <h2>Live Demo</h2>
    <p>The application is accessible at <a href="@Model.PublicUrl">@Model.PublicUrl</a>.</p>
    <p>View the Swagger documentation at <a href="@Model.PublicUrl/swagger">@Model.PublicUrl/swagger</a> for a full list of available endpoints and details.</p>

    <h2>Table of Contents</h2>
    <ul>
        <li><a href="#features">Features</a></li>
        <li><a href="#api-overview">API Overview</a></li>
        <li><a href="#getting-started">Getting Started</a></li>
        <li><a href="#configuration">Configuration</a></li>
    </ul>

    <h2 id="features">Features</h2>
    <ul>
        <li><strong>User Data API</strong>: Securely provides user data with access level restrictions based on requester’s clearance.</li>
        <li><strong>Service Data API</strong>: Manages service-related information with role-based access levels for enhanced security.</li>
        <li><strong>Field Access Management</strong>: Configure access levels for specific fields, customizing data exposure based on access requirements.</li>
        <li><strong>Frontend Interface</strong>: A simple, interactive frontend built with Razor Pages to interact with data.</li>
        <li><strong>PowerShell Script Downloads</strong>: Download scripts to generate or reset data directly from the frontend.</li>
    </ul>

    <h2 id="api-overview">API Overview</h2>

    <h3>User Data API</h3>
    <p>The User Data API provides access to personal user data with field-specific access levels. Only users with appropriate access levels can view certain data fields.</p>
    <ul>
        <li>
            Retrieve All User Data
            <pre><code class="language-http">
GET /api/UserData
            </code></pre>
        </li>
        <li>
            Retrieve User Data by Access Level
            <pre><code class="language-http">
POST /api/UserData/request
            </code></pre>
            <strong>Request Body:</strong>
            <pre><code class="language-json">
{
    "userEmail": "user@example.com",
    "requesterAccessLevel": "Confidential"
}
            </code></pre>
        </li>
    </ul>

    <h3>Service Data API</h3>
    <p>The Service Data API manages and provides access to service-related information, secured with role-based access controls for each field.</p>
    <ul>
        <li>
            Retrieve All Service Data
            <pre><code class="language-http">
GET /api/ServiceData
            </code></pre>
        </li>
        <li>
            Retrieve Service Data by Access Level
            <pre><code class="language-http">
POST /api/ServiceData/request
            </code></pre>
            <strong>Request Body:</strong>
            <pre><code class="language-json">
{
    "requesterAccessLevel": "Secret"
}
            </code></pre>
        </li>
    </ul>

    <h3>Field Access API</h3>
    <p>The Field Access API allows administrators to manage access levels for individual data fields in both UserData and ServiceData, ensuring secure, role-based data exposure.</p>
    <ul>
        <li>
            Retrieve All Field Access Settings
            <pre><code class="language-http">
GET /api/FieldAccess
            </code></pre>
        </li>
        <li>
            Add New Field Access Setting
            <pre><code class="language-http">
POST /api/FieldAccess
            </code></pre>
            <strong>Request Body:</strong>
            <pre><code class="language-json">
{
    "endpoint": "UserData",
    "fieldName": "PhoneNum",
    "accessLevel": "Public"
}
            </code></pre>
        </li>
    </ul>

    <h2 id="getting-started">Getting Started</h2>
    <h3>Prerequisites</h3>
    <ul>
        <li><strong>.NET SDK</strong>: Install the <a href="https://dotnet.microsoft.com/download/dotnet/6.0">.NET 6 SDK</a> or later.</li>
        <li><strong>Visual Studio 2022</strong> or <strong>Visual Studio Code</strong>: Recommended for development.</li>
        <li><strong>Git</strong>: For cloning the repository.</li>
    </ul>

    <h3>Installation</h3>
    <ol>
        <li>
            <strong>Clone the Repository</strong>
            <pre><code class="language-bash">
git clone https://github.com/killer6oose/API_Example.git
            </code></pre>
        </li>
        <li>
            <strong>Navigate to the Project Directory</strong>
            <pre><code class="language-bash">
cd API_Example
            </code></pre>
        </li>
        <li>
            <strong>Restore Dependencies</strong> (if required by your IDE)
            <pre><code class="language-bash">
dotnet restore
            </code></pre>
        </li>
    </ol>

    <h2 id="configuration">Configuration</h2>
    <h3>App Settings for Contact Page</h3>
    <p>To enable the contact page, configure Azure AD credentials for Microsoft Graph in your app’s secrets:</p>
    <pre><code class="language-bash">
dotnet user-secrets init
dotnet user-secrets set "AzureAd:ClientId" "your-client-id"
dotnet user-secrets set "AzureAd:TenantId" "your-tenant-id"
dotnet user-secrets set "AzureAd:ClientSecret" "your-client-secret"
dotnet user-secrets set "AzureAd:SenderEmail" "support@yourDomain.tld"
    </code></pre>

    <h3>App Settings for URLs</h3>
    <p>In your `appsettings.json`, configure the following URLs for home page links:</p>
    <pre><code class="language-json">
{
  "Settings": {
    "PublicUrl": "https://localhost:7189",
    "SupportEmail": "support@yourDomain.tld"
  }
}
    </code></pre>
</div>
